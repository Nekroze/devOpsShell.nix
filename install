#!/run/current-system/sw/bin/env nix-shell
#!nix-shell -i bash -p dialog openssh curl
# vim: ft=sh
set -eu

# Temp file to store dialog responses, deleted at the end of the run
responseFile=$(mktemp)
trap 'rm -f "$responseFile"' EXIT
get_response() {
	sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//' < "$responseFile"
}

# Dialog wrapper for consistent response recording and background title
dialog() {
	env dialog --backtitle 'devops-shell.nix' "$@" 2> "$responseFile"
}

## NIX_PATH persistent extension selection

sh_contents() {
	echo 'export NIX_PATH="ssh-config-file=$HOME/.ssh/config:$NIX_PATH"'
	if  [ -z "$SSH_AUTH_SOCK" ]; then
		echo 'set -x NIX_PATH="ssh-auth-sock=$SSH_AUTH_SOCK:$NIX_PATH"'
	fi
}

fish_contents() {
	echo 'set -x NIX_PATH ssh-config-file=$HOME/.ssh/config $NIX_PATH'
	if  [ -z "$SSH_AUTH_SOCK" ]; then
		echo 'set -x NIX_PATH ssh-auth-sock=$SSH_AUTH_SOCK $NIX_PATH'
	fi
}

dialog --checklist 'Where to place $NIX_PATH modifications' 15 80 5 \
	bashrc ~/.bashrc on \
	bash_profile ~/.bash_profile off \
	zshrc ~/.zshrc off \
	fish ~/.config/fish/conf.f/devops-shell.fish off

for dest in $(get_response); do
	case "$dest" in
		bashrc)
			sh_contents >> ~/.bashrc
			;;
		bash_profile)
			sh_contents >> ~/.bash_profile
			;;
		zshrc)
			sh_contents >> ~/.zshrc
			;;
		fish)
			mkdir -p ~/.config/fish/conf.d/
			fish_contents > ~/.config/fish/conf.d/devops-shell.fish
			;;
	esac
done

## GitForge selection

dialog --inputbox 'What is the domain name of your Git forge?' 8 40 github.com
FORGE_DOMAIN=$(get_response)

## GitForge SSH Key selection

menu_items=""
menu_id=1
for pubKeyFile in ~/.ssh/id_*.pub; do
	keyFile=~/.ssh/$(basename "$pubKeyFile" '.pub')
	keyFile=$(sed 's/ /\\ /g' <<< "$keyFile")
	[ -f "$keyFile" ] || continue
	menu_items+=" $keyFile $(ssh-keygen -lf "$keyFile" | awk '{print $1;}')"
	menu_id=$((menu_id + 1))
done

dialog --menu "Which SSH key do you use for $FORGE_DOMAIN?" 15 70 5 $menu_items
PRIVATE_KEY_FILE=$(get_response)

mkdir -p ~/.ssh
echo "
# Generated by devops-shell.nix/install on $(date)
Host $FORGE_DOMAIN
	IdentityFile $PRIVATE_KEY_FILE
" >> ~/.ssh/config

## Persistent direnv activated nix-shell!

dialog --infobox 'Adding use_nix function to ~/.direnvrc'

direnv_extras=$(mktemp)
curl -L -o "$direnv_extras" https://github.com/Mic92/dotfiles/raw/a0a9b7e358fa70a85cd468f8ca1fbb02ae0a91df/home/.direnvrc
if [ ! -f ~/.direnvrc ]; then
	cp  "$direnv_extras" ~/.direnvrc
else
	cp ~/.direnvrc ~/.direnvrc.bak
	cat ~/.direnvrc.bak "$direnv_extras" > ~/.direnvrc
fi
